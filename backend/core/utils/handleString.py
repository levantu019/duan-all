def short_date():
    """
        Example: 03/09/2022 -> 030922
    """
    import datetime
    now = datetime.datetime.now()

    short_day = now.strftime("%d")
    short_month = now.strftime("%m")
    short_year = now.strftime("%y")

    return short_day + short_month + short_year


def generate_MaNhanDang(model, prefix):
    """
        model:
        prefix: 
    """
    # NVDH030922
    time = short_date()
    prefix = prefix + time

    id = 1
    items = model.objects.filter(maNhanDang__startswith=prefix)

    if len(items) != 0:
        max_index = sorted([item.maNhanDang.split(time)[1] for item in items], key= lambda x: int(x))[-1]
        id = int(max_index) + 1 

    if id < 10:
        id = '0' + str(id)
    else:
        id = str(id)

    return prefix + id


# 
from django.utils.text import slugify
import string
import secrets
try:
    from typing import Final
except ImportError:
    from typing_extensions import Final

SLUGFIELD_MAX_LENGTH: Final = 30

def generate_slug(name: str) -> str:
    """Generates a valid slug based on ``name``."""
    slug = slugify(name, allow_unicode=False)

    if not slug:
        # Fallback to ensure a slug is always generated by using a random one
        chars = string.ascii_lowercase + string.digits
        randstr = ''.join(secrets.choice(chars) for _ in range(8))
        slug = 'rand-{0}'.format(randstr)

    slug = slug.encode('utf-8', 'surrogateescape').decode()

    return slug[:SLUGFIELD_MAX_LENGTH]